/* eslint-disable */
/**
 * 台州供水项目
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    globalAxios,
    AxiosPromise,
    AxiosInstance,
    AxiosRequestConfig,
    URL,
    Configuration,
    DUMMY_BASE_URL,
    setSearchParams,
    serializeDataIfNeeded,
    toPathString,
    createRequestFunction,
    BASE_PATH,
    RequestArgs,
    BaseAPI,
} from '@dhicn/domain-paas-sdk-ts/sdk-helper'
import { DailyFlowInfo } from '../models'
// @ts-ignore
import { RemoteServiceErrorResponse } from '../models'
/**
 * TzHDOnlineApi - axios parameter creator
 * @export
 */
export const TzHDOnlineApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *
         * @summary 获取黄岩水池可调蓄量
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV1TzWdOnlineDailyFlowApiV1DomainWdOnlineGetHuangyanTankStoragePost: async (
            options: AxiosRequestConfig = {},
        ): Promise<RequestArgs> => {
            const localVarPath = `/api/v1/tz_wd/online/daily-flow/api/v1/domain-wd/online/get-huangyan-tank-storage`
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
            let baseOptions
            if (configuration) {
                baseOptions = configuration.baseOptions
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options }
            const localVarHeaderParameter = {} as any
            const localVarQueryParameter = {} as any

            setSearchParams(localVarUrlObj, localVarQueryParameter)
            let headersFromBaseOptions =
                baseOptions && baseOptions.headers ? baseOptions.headers : {}
            localVarRequestOptions.headers = {
                ...localVarHeaderParameter,
                ...headersFromBaseOptions,
                ...options.headers,
            }

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            }
        },
        /**
         *
         * @summary 获取预测日调配水量接口
         * @param {string} [groupId] 根分组id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV1TzWdOnlineDailyFlowDailyFlowGetByGroupidGet: async (
            groupId?: string,
            options: AxiosRequestConfig = {},
        ): Promise<RequestArgs> => {
            const localVarPath = `/api/v1/tz_wd/online/daily-flow/daily-flow/get-by-groupid`
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL)
            let baseOptions
            if (configuration) {
                baseOptions = configuration.baseOptions
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options }
            const localVarHeaderParameter = {} as any
            const localVarQueryParameter = {} as any

            if (groupId !== undefined) {
                localVarQueryParameter['GroupId'] = groupId
            }

            setSearchParams(localVarUrlObj, localVarQueryParameter)
            let headersFromBaseOptions =
                baseOptions && baseOptions.headers ? baseOptions.headers : {}
            localVarRequestOptions.headers = {
                ...localVarHeaderParameter,
                ...headersFromBaseOptions,
                ...options.headers,
            }

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            }
        },
    }
}

/**
 * TzHDOnlineApi - functional programming interface
 * @export
 */
export const TzHDOnlineApiFp = function (configuration?: Configuration) {
    const localVarAxiosParamCreator = TzHDOnlineApiAxiosParamCreator(configuration)
    return {
        /**
         *
         * @summary 获取黄岩水池可调蓄量
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiV1TzWdOnlineDailyFlowApiV1DomainWdOnlineGetHuangyanTankStoragePost(
            options?: AxiosRequestConfig,
        ): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<number>> {
            const localVarAxiosArgs =
                await localVarAxiosParamCreator.apiV1TzWdOnlineDailyFlowApiV1DomainWdOnlineGetHuangyanTankStoragePost(
                    options,
                )
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
        },
        /**
         *
         * @summary 获取预测日调配水量接口
         * @param {string} [groupId] 根分组id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async apiV1TzWdOnlineDailyFlowDailyFlowGetByGroupidGet(
            groupId?: string,
            options?: AxiosRequestConfig,
        ): Promise<
            (axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<DailyFlowInfo>>
        > {
            const localVarAxiosArgs =
                await localVarAxiosParamCreator.apiV1TzWdOnlineDailyFlowDailyFlowGetByGroupidGet(
                    groupId,
                    options,
                )
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration)
        },
    }
}

/**
 * TzHDOnlineApi - factory interface
 * @export
 */
export const TzHDOnlineApiFactory = function (
    configuration?: Configuration,
    basePath?: string,
    axios?: AxiosInstance,
) {
    const localVarFp = TzHDOnlineApiFp(configuration)
    return {
        /**
         *
         * @summary 获取黄岩水池可调蓄量
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV1TzWdOnlineDailyFlowApiV1DomainWdOnlineGetHuangyanTankStoragePost(
            options?: any,
        ): AxiosPromise<number> {
            return localVarFp
                .apiV1TzWdOnlineDailyFlowApiV1DomainWdOnlineGetHuangyanTankStoragePost(options)
                .then((request) => request(axios, basePath))
        },
        /**
         *
         * @summary 获取预测日调配水量接口
         * @param {string} [groupId] 根分组id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        apiV1TzWdOnlineDailyFlowDailyFlowGetByGroupidGet(
            groupId?: string,
            options?: any,
        ): AxiosPromise<Array<DailyFlowInfo>> {
            return localVarFp
                .apiV1TzWdOnlineDailyFlowDailyFlowGetByGroupidGet(groupId, options)
                .then((request) => request(axios, basePath))
        },
    }
}

/**
 * TzHDOnlineApi - object-oriented interface
 * @export
 * @class TzHDOnlineApi
 * @extends {BaseAPI}
 */
export class TzHDOnlineApi extends BaseAPI {
    /**
     *
     * @summary 获取黄岩水池可调蓄量
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TzHDOnlineApi
     */
    public apiV1TzWdOnlineDailyFlowApiV1DomainWdOnlineGetHuangyanTankStoragePost(
        options?: AxiosRequestConfig,
    ) {
        return TzHDOnlineApiFp(this.configuration)
            .apiV1TzWdOnlineDailyFlowApiV1DomainWdOnlineGetHuangyanTankStoragePost(options)
            .then((request) => request(this.axios, this.basePath))
    }

    /**
     *
     * @summary 获取预测日调配水量接口
     * @param {string} [groupId] 根分组id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TzHDOnlineApi
     */
    public apiV1TzWdOnlineDailyFlowDailyFlowGetByGroupidGet(
        groupId?: string,
        options?: AxiosRequestConfig,
    ) {
        return TzHDOnlineApiFp(this.configuration)
            .apiV1TzWdOnlineDailyFlowDailyFlowGetByGroupidGet(groupId, options)
            .then((request) => request(this.axios, this.basePath))
    }
}
