on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    outputs:
      build_id: ${{ steps.build_step.outputs.build_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: rush install
        run: 'node common/scripts/install-run-rush.js install --to "2024.external.wd.ningbo.webapp" --debug-package-manager --max-install-attempts 3'

      - name: rush build
        run: 'export NODE_OPTIONS=--max_old_space_size=8192 && node common/scripts/install-run-rush.js build --verbose -t "2024.external.wd.ningbo.webapp"'
    
      - name: create build id
        id: build_step
        run: echo "build_id=$RANDOM" >> $GITHUB_ENV

      - name: Start deploy
        run: echo "Deploying build ${{ env.build_id }}"
      
      - name: Archive production files
        run: |
          mkdir release
          cd App/NingBoWDWebApp/dist/
          zip -r  dist.zip * # 假设你的构建产物在dist目录下，根据实际情况调整
        shell: bash
      
      - name: Create a Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          artifacts: App/NingBoWDWebApp/dist/dist.zip
          tag: ${{ env.build_id }}
          token: ${{ secrets.RELEASE_TOKEN }}
          removeArtifacts: true
