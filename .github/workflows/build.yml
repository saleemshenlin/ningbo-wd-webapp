on:
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.7
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: common/config/rush/pnpm-lock.yaml
      
      - name: Cache pnpm modules
        id: cache-pnpm
        uses: actions/cache@v3
        with:
          path: common/config/rush/pnpm-lock.yaml
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: rush install
        run: 'node common/scripts/install-run-rush.js install --to "dhi-dss-ningbo-wd-webapp" --debug-package-manager --max-install-attempts 3'

      - name: rush build
        run: 'export NODE_OPTIONS=--max_old_space_size=8192 && node common/scripts/install-run-rush.js build --verbose -t "dhi-dss-ningbo-wd-webapp"'
    
      - name: Archive production files
        run: |
          mkdir release
          zip -r release/app.zip App/NingBoWDWebApp/dist/* # 假设你的构建产物在dist目录下，根据实际情况调整
        shell: bash
      
      - name: Create a Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          artifacts: ./release/app.zip
          tag: ${{ github.sha }}
          token: ${{ secrets.RELEASE_TOKEN }}
          removeArtifacts: true
